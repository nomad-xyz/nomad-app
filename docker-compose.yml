version: "3.7"
services:
  indexer:
    build: .
    restart: always
    command: npm run start indexer
    env_file: .env
    environment:
      - PROGRAM=core
      - DATABASE_URL=postgresql://postgres:postgres@postgres:4200/postgres?connect_timeout=300&schema=public
    ports:
      - "9090:3000"
      - "9091:1337"
    depends_on:
      - "postgres"
    links:
      - postgres

  api:
    build: .
    restart: always
    command: npm run start indexer
    ports:
      - "8080:3000"
    expose:
      - 8080
    links:
      - postgres
    env_file: .env
    environment:
      - PROGRAM=api
      - DATABASE_URL=postgresql://postgres:postgres@postgres:4200/postgres?connect_timeout=300&schema=public
    depends_on:
      - "postgres"

  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nomad-terms-agreements
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: 100m
        max-file: "3"
    ports:
      - '4200:4200'
    expose:
      - 4200

  redis:
    image: redis:latest
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./redis-data:/data
    ports:
      - '6379:6379'
    expose:
      - 6379
